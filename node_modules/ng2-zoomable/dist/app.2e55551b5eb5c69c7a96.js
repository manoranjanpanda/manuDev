webpackJsonp([1],{

/***/ 348:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(2);
var platform_browser_1 = __webpack_require__(139);
var ng2_zoomable_js_1 = __webpack_require__(354);
var app_component_1 = __webpack_require__(353);
var AppModule = (function () {
    function AppModule() {
    }
    return AppModule;
}());
AppModule = __decorate([
    core_1.NgModule({
        imports: [
            platform_browser_1.BrowserModule
        ],
        declarations: [
            app_component_1.AppComponent,
            ng2_zoomable_js_1.ZoomableDirective
        ],
        bootstrap: [app_component_1.AppComponent]
    })
], AppModule);
exports.AppModule = AppModule;
//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 353:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(2);
var img1 = __webpack_require__(874);
var img2 = __webpack_require__(875);
var AppComponent = (function () {
    function AppComponent() {
        this.imageSource1 = img1;
        this.imageSource2 = img2;
    }
    return AppComponent;
}());
AppComponent = __decorate([
    core_1.Component({
        selector: 'my-app',
        styles: ["\n    img {\n      display: block;\n    }\n\n    .img1 {\n      width: 400px;\n      height: 274px;\n    }\n\n    .img2 {\n      margin-top: 20px;\n      width: 388px;\n      height: 580px;\n    }\n  "],
        template: "\n    <img [zoomable]='zoomOptions' [zoomableSrc]='imageSource1' [src]='imageSource1' class='img1'>\n    <img [zoomable]='zoomOptions' [src]='imageSource2' class='img2'>\n  "
    })
], AppComponent);
exports.AppComponent = AppComponent;
//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 354:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(876));
//# sourceMappingURL=ng2-zoomable.js.map

/***/ }),

/***/ 443:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var platform_browser_dynamic_1 = __webpack_require__(140);
var app_module_1 = __webpack_require__(348);
platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);


/***/ }),

/***/ 874:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "ea4d3a0acdd348c93c9a718ba520cf9a.jpg";

/***/ }),

/***/ 875:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "1830491e74014eef6dc0123f2f89654c.jpg";

/***/ }),

/***/ 876:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(2);
var ZoomableDirective = (function () {
    function ZoomableDirective(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.listeners = [];
        this.options = {
            hoverView: {
                background: 'transparent none',
                position: 'absolute',
                zIndex: '999'
            },
            peepView: {
                borderColor: '#fff',
                borderWidth: '2px',
                borderStyle: 'solid',
                cursor: 'zoom-in',
                position: 'fixed'
            },
            zoomView: {
                position: 'absolute',
                zIndex: '999'
            },
            settings: {
                zoom: 4,
                gap: 20
            }
        };
        this.sourceImage = '';
    }
    // directives starts its work each time element it moused over
    ZoomableDirective.prototype.onMouseEnter = function () {
        this.imgRect = this.el.nativeElement.getBoundingClientRect();
        this.createHoverView();
        this.updateHoverViewPosition();
        this.positionHoverView();
        this.styleHoverView();
        this.assignHoverListeners();
    };
    ZoomableDirective.prototype.ngOnInit = function () {
        var _a = this.customOptions || {}, _b = _a.peepView, peepViewCustomOptions = _b === void 0 ? {} : _b, _c = _a.zoomView, zoomViewCustomOptions = _c === void 0 ? {} : _c, _d = _a.settings, customSettings = _d === void 0 ? {} : _d;
        // extend default options
        Object.assign(this.options.peepView, peepViewCustomOptions);
        Object.assign(this.options.zoomView, zoomViewCustomOptions);
        Object.assign(this.options.settings, customSettings);
    };
    /**
     * Creates element that acts as wrapper for peep box
     */
    ZoomableDirective.prototype.createHoverView = function () {
        this.hoverView = this.renderer.createElement(this.el.nativeElement.parentNode, 'div');
    };
    /**
     * Creates peep view element that moves with the mouse over the image
     */
    ZoomableDirective.prototype.createPeepView = function () {
        this.peepView = this.renderer.createElement(this.hoverView, 'div');
    };
    /**
     * Creates the zoom view element
     */
    ZoomableDirective.prototype.createZoomView = function () {
        this.zoomView = this.renderer.createElement(this.el.nativeElement.parentNode, 'div');
    };
    // TODO: Try doing this with observables
    ZoomableDirective.prototype.assignHoverListeners = function () {
        var _this = this;
        this.listeners.push(this.renderer.listen(this.hoverView, 'mouseenter', function (event) {
            // peep view related tasks
            _this.createPeepView();
            _this.stylePeepView();
            _this.positionPeepView(event);
            // zoom view related tasks
            _this.createZoomView();
            _this.styleZoomView();
            _this.positionZoomView();
        }), this.renderer.listen(this.hoverView, 'mouseleave', function () { return _this.destroyViews(); }), this.renderer.listen(this.hoverView, 'mousemove', function (event) {
            _this.positionPeepView(event);
            _this.positionZoomBackground(event);
        }));
    };
    ZoomableDirective.prototype.styleHoverView = function () {
        var _this = this;
        Object.keys(this.options.hoverView)
            .forEach(function (key) {
            _this.renderer.setElementStyle(_this.hoverView, key, _this.options.hoverView[key]);
        });
    };
    ZoomableDirective.prototype.stylePeepView = function () {
        var _this = this;
        var dimensions = this.getPeepViewDimensions(), props = Object.assign({
            width: dimensions.width + "px",
            height: dimensions.height + "px"
        }, this.options.peepView);
        Object.keys(props)
            .forEach(function (key) {
            _this.renderer.setElementStyle(_this.peepView, key, props[key]);
        });
    };
    ZoomableDirective.prototype.styleZoomView = function () {
        var _this = this;
        Object.keys(this.options.zoomView)
            .forEach(function (key) {
            _this.renderer.setElementStyle(_this.zoomView, key, _this.options.zoomView[key]);
        });
    };
    ZoomableDirective.prototype.updateHoverViewPosition = function () {
        this.hoverViewPosition = {
            top: this.imgRect.top + window.scrollY,
            left: this.imgRect.left + window.scrollX,
            width: this.imgRect.width,
            height: this.imgRect.height
        };
    };
    ZoomableDirective.prototype.positionHoverView = function () {
        var _this = this;
        Object.keys(this.hoverViewPosition)
            .forEach(function (key) {
            _this.renderer.setElementStyle(_this.hoverView, key, _this.hoverViewPosition[key] + "px");
        });
    };
    ZoomableDirective.prototype.getPeepViewDimensions = function () {
        return {
            width: Math.round(this.imgRect.width / this.options.settings.zoom),
            height: Math.round(this.imgRect.height / this.options.settings.zoom)
        };
    };
    ZoomableDirective.prototype.getPeepViewCoords = function (event) {
        var dimensions = this.getPeepViewDimensions(), mouseX = event.clientX, mouseY = event.clientY, borderWidth = parseInt(this.options.peepView.borderWidth, 10) * 2, 
        // ensure top is not above the box
        top = Math.max(this.imgRect.top, mouseY - (dimensions.height / 2) - borderWidth), 
        // ensure left is not outside the box
        left = Math.max(this.imgRect.left, mouseX - (dimensions.width / 2) - borderWidth);
        // ensure both top and left will not leak from bottom or right
        return {
            top: Math.min(top, this.imgRect.bottom - dimensions.height - borderWidth),
            left: Math.min(left, this.imgRect.right - dimensions.width - borderWidth)
        };
    };
    ZoomableDirective.prototype.positionPeepView = function (event) {
        var coords = this.getPeepViewCoords(event);
        this.renderer.setElementStyle(this.peepView, 'top', coords.top + "px");
        this.renderer.setElementStyle(this.peepView, 'left', coords.left + "px");
    };
    ZoomableDirective.prototype.positionZoomView = function () {
        var _this = this;
        var props = Object.assign({}, this.hoverViewPosition, {
            left: this.hoverViewPosition.left + this.imgRect.width + this.options.settings.gap
        });
        Object.keys(props)
            .forEach(function (key) {
            _this.renderer.setElementStyle(_this.zoomView, key, props[key] + "px");
        });
    };
    ZoomableDirective.prototype.positionZoomBackground = function (event) {
        var coords = this.getPeepViewCoords(event), zoom = this.options.settings.zoom, bgWidth = this.imgRect.width * zoom, bgHeight = this.imgRect.height * zoom, imgSrc = this.sourceImage || this.el.nativeElement.getAttribute('src'), xRatio = Math.max(0, (coords.left + window.scrollX - this.hoverViewPosition.left) / this.imgRect.width), yRatio = Math.max(0, (coords.top + window.scrollY - this.hoverViewPosition.top) / this.imgRect.height);
        this.renderer.setElementStyle(this.zoomView, 'backgroundImage', "url(\"" + imgSrc + "\")");
        this.renderer.setElementStyle(this.zoomView, 'backgroundPosition', "-" + xRatio * bgWidth + "px -" + yRatio * bgHeight + "px");
        this.renderer.setElementStyle(this.zoomView, 'backgroundSize', bgWidth + "px " + bgHeight + "px");
    };
    ZoomableDirective.prototype.destroyViews = function () {
        // remove all event listeners
        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {
            var listener = _a[_i];
            listener();
        }
        this.listeners = [];
        this.hoverView.parentNode.removeChild(this.hoverView);
        this.zoomView.parentNode.removeChild(this.zoomView);
        this.hoverView = null;
        this.zoomView = null;
    };
    return ZoomableDirective;
}());
__decorate([
    core_1.Input('zoomable'),
    __metadata("design:type", Object)
], ZoomableDirective.prototype, "customOptions", void 0);
__decorate([
    core_1.Input('zoomableSrc'),
    __metadata("design:type", Object)
], ZoomableDirective.prototype, "sourceImage", void 0);
__decorate([
    core_1.HostListener('mouseenter'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ZoomableDirective.prototype, "onMouseEnter", null);
ZoomableDirective = __decorate([
    core_1.Directive({
        selector: '[zoomable]'
    }),
    __metadata("design:paramtypes", [core_1.ElementRef, core_1.Renderer])
], ZoomableDirective);
exports.ZoomableDirective = ZoomableDirective;
//# sourceMappingURL=zoomable.directive.js.map

/***/ })

},[443]);