var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef } from '@angular/core';
var ZoomLensContainer = (function () {
    function ZoomLensContainer(_elementRef) {
        this._elementRef = _elementRef;
        this.el = this._elementRef.nativeElement;
    }
    ZoomLensContainer.prototype.setOptions = function (options) {
        this.el.style.left = options['left'] + 'px';
        this.el.style.top = options['top'] + 'px';
        this.el.style.width = options['width'] + 'px';
        this.el.style.height = options['height'] + 'px';
    };
    ZoomLensContainer.prototype.setVisibility = function (visible) {
        this.el.style.display = visible ? 'block' : 'none';
    };
    return ZoomLensContainer;
}());
ZoomLensContainer = __decorate([
    Component({
        selector: 'zoom-lens-container',
        template: "",
        styles: ["\n    :host{\n      position: absolute;\n      width: 0px;\n      height: 0px;\n      overflow: hidden;\n      display: none;\n      background-color: rgba(0,0,0,0.4);\n      pointer-events: none;\n    }\n  "]
    }),
    __metadata("design:paramtypes", [ElementRef])
], ZoomLensContainer);
export { ZoomLensContainer };
